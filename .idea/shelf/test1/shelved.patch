Index: .idea/shelf/fixed_quiz_bug.xml
===================================================================
--- .idea/shelf/fixed_quiz_bug.xml	(revision 1cb4a90622215d658a41ec3514c97ce04a2463dd)
+++ .idea/shelf/fixed_quiz_bug.xml	(revision 1cb4a90622215d658a41ec3514c97ce04a2463dd)
@@ -1,4 +0,0 @@
-<changelist name="fixed_quiz_bug" date="1571477558127" recycled="false">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/fixed_quiz_bug/shelved.patch" />
-  <option name="DESCRIPTION" value="fixed quiz bug" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.webview;\n\nimport android.content.Intent;\nimport android.os.Build;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v4.app.FragmentPagerAdapter;\nimport android.support.v4.view.ViewPager;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.WindowManager;\nimport android.webkit.PermissionRequest;\nimport android.webkit.WebChromeClient;\nimport android.webkit.WebResourceRequest;\nimport android.webkit.WebSettings;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport android.widget.Toast;\n\nimport com.hangul.serokorean.R;\nimport java.util.ArrayList;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionActivity;\nimport koreanlearning.hangul.serokorean.utility.NumOfPages;\n\npublic class BeginnerOneWebView extends AppCompatActivity implements ParentRequestInterface{\n\n    private SectionsPagerAdapter sectionsPagerAdapter;\n    private CustomViewPager customViewPager;\n    private int numberOfPages = 0;\n    private int currentChapterNum = 0;\n    private String currentChapter = \"\";\n\n    public void fullScreencall() {\n        if(Build.VERSION.SDK_INT < 19){\n            View v = this.getWindow().getDecorView();\n            v.setSystemUiVisibility(View.GONE);\n        } else {\n            //for higher api versions.\n            View decorView = getWindow().getDecorView();\n            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\n            decorView.setSystemUiVisibility(uiOptions);\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        }\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        fullScreencall();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main_webview_test);\n\n        //bundle gets passed in parameters when chapters' onClick from the Home\n        Bundle bundle = getIntent().getExtras();\n        StringBuilder stringBuilderPageNum = new StringBuilder();\n        StringBuilder stringBuilderChapNum = new StringBuilder();\n\n        //check bundle to see if it's null\n        if(bundle == null){\n//            textView.setText(\"bundle error\");\n        }\n        //if not, stores the parameters are passed in\n        else{\n            //bundle is like a Map, matches key and stores the value\n            numberOfPages = bundle.getInt(\"pages\");\n            currentChapter = bundle.getString(\"chapter\");\n//            isPrevious = bundle.getInt(\"previous\");\n            stringBuilderPageNum.append(bundle.getString(\"chapter\"));\n            stringBuilderPageNum.append(\" number of pages:\");\n            stringBuilderPageNum.append(Integer.toString(bundle.getInt(\"pages\")));\n\n            //check the length of the string, and gets the number as a substring, 0-9\n            if(currentChapter.length()<=9){\n                stringBuilderChapNum.append(currentChapter.substring(8,9));\n            }\n            //number greater than 9\n            else{\n                stringBuilderChapNum.append(currentChapter.substring(8,10));\n            }\n            currentChapterNum = Integer.parseInt(stringBuilderChapNum.toString());\n        }\n\n        // Create the adapter that will return a fragment for each. primary sections of the activity.\n        sectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager(), customViewPager, this);\n\n        // Set up the ViewPager with the sections adapter.\n        customViewPager = (CustomViewPager) findViewById(R.id.container);\n        customViewPager.setAdapter(sectionsPagerAdapter);\n        customViewPager.setOffscreenPageLimit(2);\n\n        customViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener(){\n            private int nextChapterIndex = currentChapterNum + 1;\n            int SCROLLINNG_RIGHT = 0;\n            int SCROLLINNG_LEFT = 1;\n            int SCROLLINNG_UNDETERMINDED = 2;\n            int currentScrollDirection = 2;\n\n            private void setScrollingDirection(float positionOffset){\n                if((1-positionOffset) >= 0.5){\n                    this.currentScrollDirection = SCROLLINNG_RIGHT;\n                }\n                else if((1-positionOffset) <= 0.5){\n                    this.currentScrollDirection = SCROLLINNG_LEFT;\n                }\n            }\n\n            private boolean isScrollDirectionUndetermined(){\n                return currentScrollDirection == SCROLLINNG_UNDETERMINDED;\n            }\n\n            private boolean isScrollingRight(){\n                return currentScrollDirection == SCROLLINNG_RIGHT;\n            }\n\n            private boolean isScrollingLeft(){\n                return currentScrollDirection == SCROLLINNG_LEFT;\n            }\n\n            @Override\n            public void onPageScrolled(int i, float v, int i1) {\n                if(isScrollDirectionUndetermined()){\n                    setScrollingDirection(v);\n                }\n            }\n\n            @Override\n            public void onPageSelected(int i) {\n                // action when it's scrolled at the last page\n                if(i == numberOfPages-1){\n//                    Toast.makeText(BeginnerOneWebView.this, \"after next page index: \" + i, Toast.LENGTH_SHORT).show();\n                    Intent intent = new Intent(BeginnerOneWebView.this, BeginnerOneWebView.class);\n\n                    int numberOfPages = NumOfPages.detectTheNumberOfPages(Integer.toString(nextChapterIndex));\n                    intent.putExtra(\"chapter\", \"chapter \" + nextChapterIndex);\n                    intent.putExtra(\"pages\", numberOfPages);\n                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);\n                    startActivity(intent);\n                }\n                else if(i==0 && isScrollingRight()){\n                    Toast.makeText(BeginnerOneWebView.this, \"detect first page: \" + i, Toast.LENGTH_SHORT).show();\n                }\n            }\n\n            @Override\n            public void onPageScrollStateChanged(int i) { }\n        });\n    }\n\n\n    @Override\n    public void setViewPagerStatus(Boolean b) { customViewPager.setPagingEnabled(b); }\n\n    public static class PlaceholderFragment extends Fragment{\n\n        private static final String ARG_SECTION_NUMBER = \"section_number\";\n        private static final String CURRENT_CHAPTER = \"current_chapter\";\n        private static final String NUMBER_OF_PAGES = \"number_of_pages\";\n        private int position;\n        private int currentChapterNum;\n        private int numberOfPages;\n        private BeginnerOneWebView activity;\n        private CustomViewPager viewpager;\n        private BeginnerOneWebView parentActivity;\n\n        public static PlaceholderFragment newInstance(int position , int chapterNum, int numberOfPages) {\n            PlaceholderFragment fragment = new PlaceholderFragment();\n            Bundle args = new Bundle();\n            args.putInt(ARG_SECTION_NUMBER, position);\n            args.putInt(CURRENT_CHAPTER, chapterNum);\n            args.putInt(NUMBER_OF_PAGES, numberOfPages);\n            fragment.setArguments(args);\n            return fragment;\n        }\n\n        @Override\n        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n            Bundle arguments = getArguments();\n            String url=\"\";\n            String lastPage=\"\";\n            ArrayList<String> htmlFiles = new ArrayList<>();\n\n            position = arguments.getInt(ARG_SECTION_NUMBER);\n            currentChapterNum = arguments.getInt(CURRENT_CHAPTER);\n            numberOfPages = arguments.getInt(NUMBER_OF_PAGES);\n            parentActivity = (BeginnerOneWebView) getActivity();\n\n            View rootView = inflater.inflate(R.layout.fragment_main, container, false);\n            final CustomWebView webView = rootView.findViewById(R.id.webView);\n            webView.setFragment(this);\n\n            StringBuilder stringBuilder = new StringBuilder();\n            stringBuilder.append(\"file:///android_asset/level 1/chapter \");\n            stringBuilder.append(Integer.toString(currentChapterNum));\n            stringBuilder.append(\"/\");\n\n            for(int i=0; i<numberOfPages; ++i){\n                htmlFiles.add(stringBuilder.toString() + Integer.toString(i) + \".html\");\n            }\n\n            url = htmlFiles.get(position);\n            lastPage = htmlFiles.get(numberOfPages-1);\n\n            WebSettings settings = webView.getSettings();\n            settings.setAllowFileAccessFromFileURLs(true);\n            settings.setAllowUniversalAccessFromFileURLs(true);\n            settings.setMediaPlaybackRequiresUserGesture(false);\n            settings.setUseWideViewPort(true);\n            settings.setDomStorageEnabled(true);\n\n            webView.setWebChromeClient(new WebChromeClient());\n            webView.setScrollContainer(false);\n            webView.setVerticalScrollBarEnabled(false);\n            webView.setHorizontalScrollBarEnabled(false);\n            webView.setWebChromeClient(new WebChromeClient(){\n                @Override\n                public void onPermissionRequest(final PermissionRequest request) {\n                    request.grant(request.getResources());\n                }\n            });\n\n            webView.setWebViewClient(new WebViewClient(){\n                @Override\n                public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\n                    String url = request.getUrl().toString();\n                    if(url.contains(\"chapter\")){\n                        Intent intent = new Intent(getActivity(), QuestionActivity.class); //ChapterOneQuiz.class\n                        intent.putExtra(\"level\", Integer.parseInt(url.substring(12,13)));\n                        intent.putExtra(\"chapter\", Integer.parseInt(url.substring(20,21)));\n                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);\n                        startActivity(intent);\n                    }\n                    return true;\n                }\n            });\n\n            settings.setJavaScriptEnabled(true);\n            settings.setBuiltInZoomControls(true);\n            settings.setSupportZoom(true);\n            settings.setDisplayZoomControls(false);\n            settings.setLoadWithOverviewMode(true);\n            settings.setUseWideViewPort(false);\n\n            webView.loadUrl(url);\n            return rootView;\n        }\n\n        public void setViewPager(boolean b) {\n            parentActivity.setViewPagerStatus(b);\n        }\n        public void setActivity(BeginnerOneWebView activity) {\n            this.activity = activity;\n        }\n        public void setPager(CustomViewPager viewpager) {\n            this.viewpager = viewpager;\n        }\n        public PlaceholderFragment() { }\n    }\n\n    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n\n        CustomViewPager viewPager;\n        BeginnerOneWebView activity;\n\n        public SectionsPagerAdapter(FragmentManager fm, CustomViewPager viewPager, BeginnerOneWebView activity) {\n            super(fm);\n            this.viewPager=viewPager;\n            this.activity=activity;\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            // getItem is called to instantiate the fragment for the given page.\n            // Return a PlaceholderFragment (defined as a static inner class below).\n            PlaceholderFragment fragment= PlaceholderFragment.newInstance(position, currentChapterNum, numberOfPages);\n            fragment.setActivity(activity);\n            fragment.setPager(viewPager);\n            return fragment;\n        }\n\n        @Override\n        public int getCount() { return numberOfPages; }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(revision 1cb4a90622215d658a41ec3514c97ce04a2463dd)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(date 1571724739000)
@@ -9,6 +9,7 @@
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
 import android.view.LayoutInflater;
+import android.view.MotionEvent;
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
@@ -149,7 +150,6 @@
         });
     }
 
-
     @Override
     public void setViewPagerStatus(Boolean b) { customViewPager.setPagingEnabled(b); }
 
@@ -261,8 +261,8 @@
 
     public class SectionsPagerAdapter extends FragmentPagerAdapter {
 
-        CustomViewPager viewPager;
-        BeginnerOneWebView activity;
+        private CustomViewPager viewPager;
+        private BeginnerOneWebView activity;
 
         public SectionsPagerAdapter(FragmentManager fm, CustomViewPager viewPager, BeginnerOneWebView activity) {
             super(fm);
