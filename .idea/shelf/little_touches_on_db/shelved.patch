Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.webview;\n\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v4.app.FragmentPagerAdapter;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.WindowManager;\nimport android.webkit.JavascriptInterface;\nimport android.webkit.WebChromeClient;\nimport android.webkit.WebResourceRequest;\nimport android.webkit.WebSettings;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport android.widget.Toast;\n\n\nimport com.hangul.serokorean.R;\nimport java.util.ArrayList;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;\n\n\npublic class BeginnerOneWebView extends AppCompatActivity implements ParentRequestInterface{\n\n    private SectionsPagerAdapter sectionsPagerAdapter;\n    private CustomViewPager customViewPager;\n\n    private int numberOfPages = 0;\n    private int currentPage = 0;\n    private int currentChapterNum = 0;\n    private String currentChapter = \"\";\n    private ArrayList<String> htmlFiles = new ArrayList<>();\n    private int isPrevious = 0;\n\n    public void fullScreencall() {\n        if(Build.VERSION.SDK_INT < 19){\n            View v = this.getWindow().getDecorView();\n            v.setSystemUiVisibility(View.GONE);\n        } else {\n            //for higher api versions.\n            View decorView = getWindow().getDecorView();\n            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\n            decorView.setSystemUiVisibility(uiOptions);\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        }\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        fullScreencall();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main_webview_test);\n\n        //bundle gets passed in parameters when chapters' onClick from the Home\n        Bundle bundle = getIntent().getExtras();\n        StringBuilder stringBuilderPageNum = new StringBuilder();\n        StringBuilder stringBuilderChapNum = new StringBuilder();\n\n        //check bundle to see if it's null\n        if(bundle == null){\n//            textView.setText(\"bundle error\");\n        }\n        //if not, stores the parameters are passed in\n        else{\n            //bundle is like a Map, matches key and stores the value\n            numberOfPages = bundle.getInt(\"pages\");\n            currentChapter = bundle.getString(\"chapter\");\n//            isPrevious = bundle.getInt(\"previous\");\n            stringBuilderPageNum.append(bundle.getString(\"chapter\"));\n            stringBuilderPageNum.append(\" number of pages:\");\n            stringBuilderPageNum.append(Integer.toString(bundle.getInt(\"pages\")));\n\n            //check the length of the string, and gets the number as a substring, 0-9\n            if(currentChapter.length()<=9){\n                stringBuilderChapNum.append(currentChapter.substring(8,9));\n            }\n            //number greater than 9\n            else{\n                stringBuilderChapNum.append(currentChapter.substring(8,10));\n            }\n            currentChapterNum = Integer.parseInt(stringBuilderChapNum.toString());\n        }\n\n        // Create the adapter that will return a fragment for each. primary sections of the activity.\n        sectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager(), customViewPager, this);\n\n        // Set up the ViewPager with the sections adapter.\n        customViewPager = (CustomViewPager) findViewById(R.id.container);\n        customViewPager.setAdapter(sectionsPagerAdapter);\n        customViewPager.setOffscreenPageLimit(2);\n    }\n\n\n    @Override\n    public void setViewPagerStatus(Boolean b) { customViewPager.setPagingEnabled(b); }\n\n    public static class PlaceholderFragment extends Fragment{\n\n        private static final String ARG_SECTION_NUMBER = \"section_number\";\n        private static final String CURRENT_CHAPTER = \"current_chapter\";\n        private static final String NUMBER_OF_PAGES = \"number_of_pages\";\n        private int position;\n        private int currentChapterNum;\n        private int numberOfPages;\n        private BeginnerOneWebView activity;\n        private CustomViewPager viewpager;\n        private BeginnerOneWebView parentActivity;\n\n        public static PlaceholderFragment newInstance(int position , int chapterNum, int numberOfPages) {\n            PlaceholderFragment fragment = new PlaceholderFragment();\n            Bundle args = new Bundle();\n            args.putInt(ARG_SECTION_NUMBER, position);\n            args.putInt(CURRENT_CHAPTER, chapterNum);\n            args.putInt(NUMBER_OF_PAGES, numberOfPages);\n            fragment.setArguments(args);\n            return fragment;\n        }\n\n        @Override\n        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n            Bundle arguments = getArguments();\n            String url=\"\";\n            String lastPage=\"\";\n            ArrayList<String> htmlFiles = new ArrayList<>();\n\n            position = arguments.getInt(ARG_SECTION_NUMBER);\n            currentChapterNum = arguments.getInt(CURRENT_CHAPTER);\n            numberOfPages = arguments.getInt(NUMBER_OF_PAGES);\n            parentActivity = (BeginnerOneWebView) getActivity();\n\n            View rootView = inflater.inflate(R.layout.fragment_main, container, false);\n            final CustomWebView webView = rootView.findViewById(R.id.webView);\n            webView.setFragment(this);\n\n            StringBuilder stringBuilder = new StringBuilder();\n            stringBuilder.append(\"file:///android_asset/level 1/chapter \");\n            stringBuilder.append(Integer.toString(currentChapterNum));\n            stringBuilder.append(\"/\");\n\n            for(int i=0; i<numberOfPages; ++i){\n                htmlFiles.add(stringBuilder.toString() + Integer.toString(i) + \".html\");\n            }\n\n            url = htmlFiles.get(position);\n            lastPage = htmlFiles.get(numberOfPages-1);\n\n            WebSettings settings = webView.getSettings();\n            webView.setWebChromeClient(new WebChromeClient());\n            webView.setScrollContainer(false);\n            webView.setVerticalScrollBarEnabled(false);\n            webView.setHorizontalScrollBarEnabled(false);\n            webView.setWebViewClient(new WebViewClient(){\n                @Override\n                public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\n                    String url = request.getUrl().toString();\n                    if(url.contains(\"chapteronequiz\")){\n                        Intent intent = new Intent(getActivity(), QuizCategories.class); //ChapterOneQuiz.class\n                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);\n                        startActivity(intent);\n                    }\n                    return true;\n                }\n            });\n\n            settings.setJavaScriptEnabled(true);\n            settings.setBuiltInZoomControls(true);\n            settings.setSupportZoom(true);\n            settings.setDisplayZoomControls(false);\n            settings.setLoadWithOverviewMode(true);\n            settings.setUseWideViewPort(false);\n\n            webView.loadUrl(url);\n            return rootView;\n        }\n\n        public void setViewPager(boolean b) {\n            parentActivity.setViewPagerStatus(b);\n        }\n        public void setActivity(BeginnerOneWebView activity) {\n            this.activity = activity;\n        }\n        public void setPager(CustomViewPager viewpager) {\n            this.viewpager = viewpager;\n        }\n        public PlaceholderFragment() { }\n\n        public class WebAppInterface {\n            Context mContext;\n\n            /** Instantiate the interface and set the context */\n            WebAppInterface(Context c) {\n                mContext = c;\n            }\n\n            /** Show a toast from the web page */\n            @JavascriptInterface\n            public void showToast(String toast) {\n                Toast.makeText(mContext, toast, Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n\n    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n\n        CustomViewPager viewPager;\n        BeginnerOneWebView activity;\n\n        public SectionsPagerAdapter(FragmentManager fm, CustomViewPager viewPager, BeginnerOneWebView activity) {\n            super(fm);\n            this.viewPager=viewPager;\n            this.activity=activity;\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            // getItem is called to instantiate the fragment for the given page.\n            // Return a PlaceholderFragment (defined as a static inner class below).\n            PlaceholderFragment fragment= PlaceholderFragment.newInstance(position, currentChapterNum, numberOfPages);\n            fragment.setActivity(activity);\n            fragment.setPager(viewPager);\n            return fragment;\n        }\n\n        @Override\n        public int getCount() { return numberOfPages; }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(revision 730299decf363a5162f4da6b4ecd9997ff6e48a6)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(date 1570513395000)
@@ -25,6 +25,7 @@
 import com.hangul.serokorean.R;
 import java.util.ArrayList;
 
+import koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper.DBhelper;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;
 
 
@@ -158,6 +159,15 @@
             webView.setVerticalScrollBarEnabled(false);
             webView.setHorizontalScrollBarEnabled(false);
             webView.setWebViewClient(new WebViewClient(){
+
+                public void onReceivedError(WebView view, int errorCode, String description, String failingUrl){
+                    if(failingUrl.contains("chapteronequiz")){
+                        Intent intent = new Intent(getActivity(), QuizCategories.class); //ChapterOneQuiz.class
+                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+                        startActivity(intent);
+                    }
+                }
+
                 @Override
                 public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                     String url = request.getUrl().toString();
@@ -168,6 +178,8 @@
                     }
                     return true;
                 }
+
+
             });
 
             settings.setJavaScriptEnabled(true);
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper;\n\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.readystatesoftware.sqliteasset.SQLiteAssetHelper;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;\n\npublic class DBhelper extends SQLiteAssetHelper {\n\n    private static final String DB_NAME = \"samplequiz2.db\";\n    private static final int DB_VER = 1;\n\n    private static DBhelper instance;\n\n    public static synchronized DBhelper getInstance(Context context){\n        if(instance == null){\n            instance = new DBhelper(context);\n        }\n        return instance;\n    }\n\n    public DBhelper(Context context) {\n        super(context, DB_NAME, null, DB_VER);\n    }\n\n    public List<Category> getAllCategories(){\n        SQLiteDatabase db = instance.getWritableDatabase();\n        Cursor cursor = db.rawQuery(\"Select * From Category;\", null);\n        List<Category> categories = new ArrayList<>();\n        if(cursor.moveToFirst()){\n            while(!cursor.isAfterLast()){\n                Category category = new Category(cursor.getInt(cursor.getColumnIndex(\"ID\")),\n                        cursor.getString(cursor.getColumnIndex(\"Name\")),\n                        cursor.getString(cursor.getColumnIndex(\"Image\")));\n                categories.add(category);\n                cursor.moveToNext();\n            }\n        }\n        cursor.close();\n        db.close();\n        return categories;\n    }\n\n    //get all question from DB\n    public List<Question> getQuestionByCategory(int categoryIndex){\n        SQLiteDatabase db = instance.getWritableDatabase();\n        Cursor cursor = db.rawQuery(String.format(\"Select * From Question Where CategoryID = %d Order by Random() Limit 30\", categoryIndex), null);\n        List<Question> questions = new ArrayList<>();\n        if(cursor.moveToFirst()){\n            while(!cursor.isAfterLast()){\n                Question question = new Question(cursor.getInt(cursor.getColumnIndex(\"ID\")),\n                        cursor.getString(cursor.getColumnIndex(\"QuestionText\")),\n                        cursor.getString(cursor.getColumnIndex(\"QuestionImage\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerA\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerB\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerC\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerD\")),\n                        cursor.getString(cursor.getColumnIndex(\"CorrectAnswer\")),\n                        cursor.getInt(cursor.getColumnIndex(\"IsImageQuestion\")) == 0?Boolean.FALSE: Boolean.TRUE,\n                        cursor.getInt(cursor.getColumnIndex(\"CategoryID\")));\n\n                questions.add(question);\n                cursor.moveToNext();\n            }\n        }\n        cursor.close();\n        db.close();\n        return questions;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java	(revision 730299decf363a5162f4da6b4ecd9997ff6e48a6)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java	(date 1570514662000)
@@ -3,6 +3,7 @@
 import android.content.Context;
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteOpenHelper;
 
 import com.readystatesoftware.sqliteasset.SQLiteAssetHelper;
 
@@ -12,14 +13,16 @@
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;
 
-public class DBhelper extends SQLiteAssetHelper {
+public class DBhelper extends SQLiteOpenHelper {
 
     private static final String DB_NAME = "samplequiz2.db";
     private static final int DB_VER = 1;
 
     private static DBhelper instance;
+    private Cursor cursor;
+    private SQLiteDatabase db;
 
-    public static synchronized DBhelper getInstance(Context context){
+    public static DBhelper getInstance(Context context){
         if(instance == null){
             instance = new DBhelper(context);
         }
@@ -30,9 +33,19 @@
         super(context, DB_NAME, null, DB_VER);
     }
 
+    @Override
+    public void onCreate(SQLiteDatabase db) {
+        this.db = db;
+        db = instance.getWritableDatabase();
+        cursor = db.rawQuery("Select * From Category;", null);
+    }
+
+    @Override
+    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
+
+    }
+
     public List<Category> getAllCategories(){
-        SQLiteDatabase db = instance.getWritableDatabase();
-        Cursor cursor = db.rawQuery("Select * From Category;", null);
         List<Category> categories = new ArrayList<>();
         if(cursor.moveToFirst()){
             while(!cursor.isAfterLast()){
