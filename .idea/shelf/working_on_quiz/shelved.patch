Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    package=\"com.hangul.serokorean\"\n    tools:ignore=\"ImpliedTouchscreenHardware,MissingLeanbackLauncher,MissingLeanbackSupport\">\n\n    <uses-permission android:name=\"android.permission.INTERNET\" />\n\n    <application\n        android:allowBackup=\"true\"\n        android:icon=\"@mipmap/ic_launcher\"\n        android:label=\"@string/app_name\"\n        android:roundIcon=\"@mipmap/ic_launcher\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/AppTheme2\">\n        <activity\n            android:name=\"koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionActivity\"\n            android:label=\"@string/title_activity_question\"\n            android:theme=\"@style/AppTheme2.NoActionBar\"></activity>\n        <activity android:name=\"koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories\" />\n        <activity android:name=\"koreanlearning.hangul.serokorean.search.Search\" />\n        <activity android:name=\"koreanlearning.hangul.serokorean.beginnerone.webview.BeginnerOneWebView\" />\n        <activity android:name=\"koreanlearning.hangul.serokorean.beginnerone.BeginnerOne\" />\n        <activity android:name=\"koreanlearning.hangul.serokorean.main.MainActivity\" />\n        <activity android:name=\"koreanlearning.hangul.serokorean.main.Welcome\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/AndroidManifest.xml	(date 1571021419000)
@@ -5,6 +5,9 @@
     tools:ignore="ImpliedTouchscreenHardware,MissingLeanbackLauncher,MissingLeanbackSupport">
 
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.CAMERA" />
+    <uses-permission android:name="android.permission.RECORD_AUDIO" />
 
     <application
         android:allowBackup="true"
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/CurrentQuestion.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.Model;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;\n\npublic class CurrentQuestion {\n    private int questionIndex;\n    private Common.ANSWER_TYPE type;\n\n    public CurrentQuestion(int questionIndex, Common.ANSWER_TYPE type) {\n        this.questionIndex = questionIndex;\n        this.type = type;\n    }\n\n    public int getQuestionIndex() {\n        return questionIndex;\n    }\n\n    public void setQuestionIndex(int questionIndex) {\n        this.questionIndex = questionIndex;\n    }\n\n    public Common.ANSWER_TYPE getType() {\n        return type;\n    }\n\n    public void setType(Common.ANSWER_TYPE type) {\n        this.type = type;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/CurrentQuestion.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/CurrentQuestion.java	(date 1571017333000)
@@ -1,12 +1,12 @@
 package koreanlearning.hangul.serokorean.beginnerone.quiz.Model;
 
-import koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.common.QuizCommon;
 
 public class CurrentQuestion {
     private int questionIndex;
-    private Common.ANSWER_TYPE type;
+    private QuizCommon.ANSWER_TYPE type;
 
-    public CurrentQuestion(int questionIndex, Common.ANSWER_TYPE type) {
+    public CurrentQuestion(int questionIndex, QuizCommon.ANSWER_TYPE type) {
         this.questionIndex = questionIndex;
         this.type = type;
     }
@@ -19,11 +19,11 @@
         this.questionIndex = questionIndex;
     }
 
-    public Common.ANSWER_TYPE getType() {
+    public QuizCommon.ANSWER_TYPE getType() {
         return type;
     }
 
-    public void setType(Common.ANSWER_TYPE type) {
+    public void setType(QuizCommon.ANSWER_TYPE type) {
         this.type = type;
     }
 }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CMakeSettings\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\n    </configurations>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"JDK\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ .idea/misc.xml	(date 1570591684000)
@@ -5,7 +5,7 @@
       <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
     </configurations>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="JDK" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/assets/quizJson/1.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/quizJson/1.json	(date 1571020229000)
+++ app/src/main/assets/quizJson/1.json	(date 1571020229000)
@@ -0,0 +1,41 @@
+{
+  "module": {
+    "number": 1,
+    "name": "chapter1 quiz",
+    "questions": 30,
+    "revision": "2019-10-13"
+  },
+  "questions": [
+    {
+      "id": 1,
+      "type": "mc",
+      "number": 1,
+      "question": "Multiple choices",
+      "answerA": "A",
+      "answerB": "B",
+      "answerC": "C",
+      "answerD": "D",
+      "correct_answer": 1
+    },
+    {
+      "id": 2,
+      "number": 2,
+      "question": "Multiple choices",
+      "answerA": "A",
+      "answerB": "B",
+      "answerC": "C",
+      "answerD": "D",
+      "correct_answer": 4
+    },
+    {
+      "id": 3,
+      "number": 2,
+      "question": "Multiple choices",
+      "answerA": "A",
+      "answerB": "B",
+      "answerC": "C",
+      "answerD": "D",
+      "correct_answer": 3
+    }
+  ]
+}
\ No newline at end of file
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper;\n\nimport android.content.Context;\nimport android.database.Cursor;\nimport android.database.sqlite.SQLiteDatabase;\n\nimport com.readystatesoftware.sqliteasset.SQLiteAssetHelper;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;\n\npublic class DBhelper extends SQLiteAssetHelper {\n\n    private static final String DB_NAME = \"samplequiz2.db\";\n    private static final int DB_VER = 1;\n\n    private static DBhelper instance;\n\n    public static synchronized DBhelper getInstance(Context context){\n        if(instance == null){\n            instance = new DBhelper(context);\n        }\n        return instance;\n    }\n\n    public DBhelper(Context context) {\n        super(context, DB_NAME, null, DB_VER);\n    }\n\n    public List<Category> getAllCategories(){\n        SQLiteDatabase db = instance.getWritableDatabase();\n        Cursor cursor = db.rawQuery(\"Select * From Category;\", null);\n        List<Category> categories = new ArrayList<>();\n        if(cursor.moveToFirst()){\n            while(!cursor.isAfterLast()){\n                Category category = new Category(cursor.getInt(cursor.getColumnIndex(\"ID\")),\n                        cursor.getString(cursor.getColumnIndex(\"Name\")),\n                        cursor.getString(cursor.getColumnIndex(\"Image\")));\n                categories.add(category);\n                cursor.moveToNext();\n            }\n        }\n        cursor.close();\n        db.close();\n        return categories;\n    }\n\n    //get all question from DB\n    public List<Question> getQuestionByCategory(int categoryIndex){\n        SQLiteDatabase db = instance.getWritableDatabase();\n        Cursor cursor = db.rawQuery(String.format(\"Select * From Question Where CategoryID = %d Order by Random() Limit 30\", categoryIndex), null);\n        List<Question> questions = new ArrayList<>();\n        if(cursor.moveToFirst()){\n            while(!cursor.isAfterLast()){\n                Question question = new Question(cursor.getInt(cursor.getColumnIndex(\"ID\")),\n                        cursor.getString(cursor.getColumnIndex(\"QuestionText\")),\n                        cursor.getString(cursor.getColumnIndex(\"QuestionImage\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerA\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerB\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerC\")),\n                        cursor.getString(cursor.getColumnIndex(\"AnswerD\")),\n                        cursor.getString(cursor.getColumnIndex(\"CorrectAnswer\")),\n                        cursor.getInt(cursor.getColumnIndex(\"IsImageQuestion\")) == 0?Boolean.FALSE: Boolean.TRUE,\n                        cursor.getInt(cursor.getColumnIndex(\"CategoryID\")));\n\n                questions.add(question);\n                cursor.moveToNext();\n            }\n        }\n        cursor.close();\n        db.close();\n        return questions;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/DBhelper/DBhelper.java	(date 1571020229000)
@@ -14,7 +14,7 @@
 
 public class DBhelper extends SQLiteAssetHelper {
 
-    private static final String DB_NAME = "samplequiz2.db";
+    private static final String DB_NAME = "korean.serolanguage.com/databases/samplequiz2.db";
     private static final int DB_VER = 1;
 
     private static DBhelper instance;
@@ -31,6 +31,7 @@
     }
 
     public List<Category> getAllCategories(){
+
         SQLiteDatabase db = instance.getWritableDatabase();
         Cursor cursor = db.rawQuery("Select * From Category;", null);
         List<Category> categories = new ArrayList<>();
@@ -57,14 +58,11 @@
             while(!cursor.isAfterLast()){
                 Question question = new Question(cursor.getInt(cursor.getColumnIndex("ID")),
                         cursor.getString(cursor.getColumnIndex("QuestionText")),
-                        cursor.getString(cursor.getColumnIndex("QuestionImage")),
                         cursor.getString(cursor.getColumnIndex("AnswerA")),
                         cursor.getString(cursor.getColumnIndex("AnswerB")),
                         cursor.getString(cursor.getColumnIndex("AnswerC")),
                         cursor.getString(cursor.getColumnIndex("AnswerD")),
-                        cursor.getString(cursor.getColumnIndex("CorrectAnswer")),
-                        cursor.getInt(cursor.getColumnIndex("IsImageQuestion")) == 0?Boolean.FALSE: Boolean.TRUE,
-                        cursor.getInt(cursor.getColumnIndex("CategoryID")));
+                        cursor.getString(cursor.getColumnIndex("CorrectAnswer")));
 
                 questions.add(question);
                 cursor.moveToNext();
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/common/Common.java
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/common/Common.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/common/QuizCommon.java	(date 1571017333000)
@@ -11,7 +11,7 @@
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionFragment;
 
-public class Common {
+public class QuizCommon {
     public static Category selectedCategory = new Category();
     public static final int TOTAL_TIME = 20*60*1000; // 20mins
     public static List<Question> questionList = new ArrayList<>();
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuizCategories.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz;\n\nimport android.os.Build;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.support.v7.widget.GridLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.support.v7.widget.Toolbar;\nimport android.view.View;\nimport android.view.WindowManager;\n\nimport com.hangul.serokorean.R;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper.DBhelper;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.CategoryAdapter;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.SpaceDecoration;\n\npublic class QuizCategories extends AppCompatActivity {\n\n    Toolbar toolbar;\n    RecyclerView recyclerView_category;\n\n    public void fullScreencall() {\n        if(Build.VERSION.SDK_INT < 19){\n            View v = this.getWindow().getDecorView();\n            v.setSystemUiVisibility(View.GONE);\n        } else {\n            //for higher api versions.\n            View decorView = getWindow().getDecorView();\n            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\n            decorView.setSystemUiVisibility(uiOptions);\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        }\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        fullScreencall();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_quiz_categories);\n\n        toolbar = findViewById(R.id.toolbar);\n        toolbar.setTitle(\"Chapter Quiz\");\n        setSupportActionBar(toolbar);\n\n        recyclerView_category = findViewById(R.id.recycler_category);\n        recyclerView_category.setHasFixedSize(true);\n        recyclerView_category.setLayoutManager(new GridLayoutManager(this, 2));\n\n//        DisplayMetrics displayMetrics = new DisplayMetrics();\n//        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);\n//        int height = displayMetrics.heightPixels / 8;\n        CategoryAdapter adapter = new CategoryAdapter(QuizCategories.this, DBhelper.getInstance(this).getAllCategories());\n        int spaceInPixel = 4;\n        recyclerView_category.addItemDecoration(new SpaceDecoration(spaceInPixel));\n        recyclerView_category.setAdapter(adapter);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuizCategories.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuizCategories.java	(date 1571017333000)
@@ -1,5 +1,7 @@
 package koreanlearning.hangul.serokorean.beginnerone.quiz;
 
+import android.database.Cursor;
+import android.database.sqlite.SQLiteDatabase;
 import android.os.Build;
 import android.support.v7.app.AppCompatActivity;
 import android.os.Bundle;
@@ -11,7 +13,11 @@
 
 import com.hangul.serokorean.R;
 
+import java.util.ArrayList;
+import java.util.List;
+
 import koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper.DBhelper;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.CategoryAdapter;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.common.SpaceDecoration;
 
@@ -50,9 +56,14 @@
 //        DisplayMetrics displayMetrics = new DisplayMetrics();
 //        getWindowManager().getDefaultDisplay().getMetrics(displayMetrics);
 //        int height = displayMetrics.heightPixels / 8;
-        CategoryAdapter adapter = new CategoryAdapter(QuizCategories.this, DBhelper.getInstance(this).getAllCategories());
+//        CategoryAdapter adapter = new CategoryAdapter(QuizCategories.this, DBhelper.getInstance(this).getAllCategories());
+
+
+        CategoryAdapter adapter = new CategoryAdapter(QuizCategories.this, null);
+
         int spaceInPixel = 4;
         recyclerView_category.addItemDecoration(new SpaceDecoration(spaceInPixel));
         recyclerView_category.setAdapter(adapter);
     }
+
 }
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz;\n\nimport android.os.Build;\nimport android.os.Bundle;\nimport android.os.CountDownTimer;\nimport android.support.annotation.NonNull;\nimport android.support.design.widget.FloatingActionButton;\nimport android.support.design.widget.Snackbar;\nimport android.support.design.widget.TabLayout;\nimport android.support.v4.view.ViewPager;\nimport android.support.v7.widget.GridLayoutManager;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.View;\nimport android.support.v4.view.GravityCompat;\nimport android.support.v7.app.ActionBarDrawerToggle;\nimport android.view.MenuItem;\nimport android.support.design.widget.NavigationView;\nimport android.support.v4.widget.DrawerLayout;\n\nimport android.support.v7.app.AppCompatActivity;\nimport android.support.v7.widget.Toolbar;\nimport android.view.Menu;\nimport android.view.WindowManager;\nimport android.widget.TableLayout;\nimport android.widget.TextView;\n\nimport com.afollestad.materialdialogs.DialogAction;\nimport com.afollestad.materialdialogs.MaterialDialog;\nimport com.github.javiersantos.materialstyleddialogs.MaterialStyledDialog;\nimport com.hangul.serokorean.R;\n\nimport java.util.concurrent.TimeUnit;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper.DBhelper;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.CurrentQuestion;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.AnswerSheetAdapter;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.QuestionFragmentsAdapter;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;\n\npublic class QuestionActivity extends AppCompatActivity\n        implements NavigationView.OnNavigationItemSelectedListener {\n\n    int time_play = Common.TOTAL_TIME;\n    boolean isAnswerModeView = false;\n    RecyclerView answer_sheet_view;\n    AnswerSheetAdapter answerSheetAdapter;\n\n    TextView txt_right_answer, txt_timer;\n    ViewPager viewPager;\n    TabLayout tabLayout;\n\n    @Override\n    protected void onDestroy() {\n        if(Common.countDownTimer != null){\n            Common.countDownTimer.cancel();\n        }\n        super.onDestroy();\n    }\n\n    public void fullScreencall() {\n        if(Build.VERSION.SDK_INT < 19){\n            View v = this.getWindow().getDecorView();\n            v.setSystemUiVisibility(View.GONE);\n        } else {\n            //for higher api versions.\n            View decorView = getWindow().getDecorView();\n            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\n            decorView.setSystemUiVisibility(uiOptions);\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        }\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        fullScreencall();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_question);\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        toolbar.setTitle(Common.selectedCategory.getName());\n        setSupportActionBar(toolbar);\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\n        NavigationView navigationView = findViewById(R.id.nav_view);\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(\n                this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\n        drawer.addDrawerListener(toggle);\n        toggle.syncState();\n        navigationView.setNavigationItemSelectedListener(this);\n        \n        //take questions from DB\n        takeQuestion();\n\n        if(Common.questionList.size() > 0){\n\n            //show textView right answer and textView timer\n            txt_right_answer = findViewById(R.id.txt_question_right);\n//            txt_timer = findViewById(R.id.txt_timer);\n\n//            txt_timer.setVisibility(View.VISIBLE);\n            txt_right_answer.setVisibility(View.VISIBLE);\n            txt_right_answer.setText(new StringBuilder(String.format(\"%d/%d\", Common.right_answer_count, Common.questionList.size())));\n\n//            countTimer();\n\n            //view\n            answer_sheet_view = findViewById(R.id.grid_answer);\n            answer_sheet_view.setHasFixedSize(true);\n            if(Common.questionList.size() > 5){ // if question list have size > 5, we will sperate 2 rows\n                answer_sheet_view.setLayoutManager(new GridLayoutManager(this, Common.questionList.size()/2));\n            }\n            answerSheetAdapter = new AnswerSheetAdapter(this, Common.answerSheetList);\n            answer_sheet_view.setAdapter(answerSheetAdapter);\n            \n            viewPager = findViewById(R.id.quizViewpager);\n            tabLayout = findViewById(R.id.sliding_tabs);\n            \n            genFragmentList();\n            QuestionFragmentsAdapter questionFragmentsAdapter = new QuestionFragmentsAdapter(getSupportFragmentManager(), this, Common.fragmentsList);\n            viewPager.setAdapter(questionFragmentsAdapter);\n\n            tabLayout.setupWithViewPager(viewPager);\n\n            // event\n            viewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {\n                int SCROLLINNG_RIGHT = 0;\n                int SCROLLINNG_LEFT = 1;\n                int SCROLLINNG_UNDETERMINDED = 2;\n                int currentScrollDirection = 2;\n\n                private void setScrollingDirection(float positionOffset){\n                    if((1-positionOffset) >= 0.5){\n                        this.currentScrollDirection = SCROLLINNG_RIGHT;\n                    }\n                    else if((1-positionOffset) <= 0.5){\n                        this.currentScrollDirection = SCROLLINNG_LEFT;\n                    }\n                }\n\n                private boolean isScrollDirectionUndetermined(){\n                    return currentScrollDirection == SCROLLINNG_UNDETERMINDED;\n                }\n\n                private boolean isScrollingRight(){\n                    return currentScrollDirection == SCROLLINNG_RIGHT;\n                }\n\n                private boolean isScrollingLeft(){\n                    return currentScrollDirection == SCROLLINNG_LEFT;\n                }\n\n                @Override\n                public void onPageScrolled(int i, float v, int i1) {\n                    if(isScrollDirectionUndetermined()){\n                        setScrollingDirection(v);\n                    }\n                }\n\n                @Override\n                public void onPageSelected(int i) {\n                    QuestionFragment questionFragment;\n                    int position = 0;\n                    if(i > 0){\n                        if(isScrollingRight()){\n                            // get previous when user scroll right\n                            questionFragment = Common.fragmentsList.get(i-1);\n                            position = i-1;\n                        }\n                        else if(isScrollingLeft()){\n                            // get next when user scroll left\n                            questionFragment = Common.fragmentsList.get(i+1);\n                            position = i+1;\n                        }\n                        else{\n                            questionFragment = Common.fragmentsList.get(position);\n                        }\n                    }\n                    else{\n                        questionFragment = Common.fragmentsList.get(0);\n                        position = 0;\n                    }\n\n                    //if you want to show correct answer, just call function here\n                    CurrentQuestion question_state = questionFragment.getSelectedAnswer();\n                    Common.answerSheetList.set(position, question_state);\n                    answerSheetAdapter.notifyDataSetChanged(); // change color in answer sheet\n\n                    countCorrectAnswer();\n                    txt_right_answer.setText(new StringBuilder(String.format(\"%d\", Common.right_answer_count))\n                            .append(\"/\")\n                            .append(String.format(\"%d\", Common.questionList.size())).toString());\n\n                    if(question_state.getType() != Common.ANSWER_TYPE.NO_ANSWER){\n                        questionFragment.showCorrectAnswer();\n                        questionFragment.disableAnswer();\n                    }\n                }\n\n                @Override\n                public void onPageScrollStateChanged(int i) {\n                    if(i == ViewPager.SCROLL_STATE_IDLE){\n                        this.currentScrollDirection = SCROLLINNG_UNDETERMINDED;\n                    }\n                }\n\n\n            });\n        }\n    }\n\n    private void countCorrectAnswer() {\n        // reset variable\n        Common.right_answer_count = Common.wrong_answer_counnt = 0;\n        for(CurrentQuestion item : Common.answerSheetList){\n            if(item.getType() == Common.ANSWER_TYPE.RIGHT_ANSWER){\n                Common.right_answer_count++;\n            }\n            else if(item.getType() == Common.ANSWER_TYPE.WRONG_ANSWER){\n                Common.wrong_answer_counnt++;\n            }\n        }\n    }\n\n    private void genFragmentList() {\n        for(int i=0; i<Common.questionList.size(); ++i){\n            Bundle bundle = new Bundle();\n            bundle.putInt(\"index\", i);\n            QuestionFragment fragment = new QuestionFragment();\n            fragment.setArguments(bundle);\n\n            Common.fragmentsList.add(fragment);\n        }\n    }\n\n\n    private void countTimer() {\n        if(Common.countDownTimer == null){\n            Common.countDownTimer = new CountDownTimer(Common.TOTAL_TIME, 1000) {\n\n                @Override\n                public void onTick(long millisUntilFinished) {\n                    txt_timer.setText(String.format(\"%02d:%02d\",\n                            TimeUnit.MILLISECONDS.toMinutes(1),\n                            TimeUnit.MILLISECONDS.toSeconds(1) -\n                                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(1))));\n                    time_play -= 1000;\n                }\n\n                @Override\n                public void onFinish() {\n\n                }\n            }.start();\n        }\n        else{\n            Common.countDownTimer.cancel();\n            Common.countDownTimer = new CountDownTimer(Common.TOTAL_TIME, 1000) {\n\n                @Override\n                public void onTick(long millisUntilFinished) {\n                    txt_timer.setText(String.format(\"%02d:%02d\",\n                            TimeUnit.MILLISECONDS.toMinutes(1),\n                            TimeUnit.MILLISECONDS.toSeconds(1) -\n                                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(1))));\n                    time_play -= 1000;\n                }\n\n                @Override\n                public void onFinish() {\n\n                }\n            }.start();\n        }\n    }\n\n    private void takeQuestion() {\n        Common.questionList = DBhelper.getInstance(this).getQuestionByCategory(Common.selectedCategory.getId());\n        if(Common.questionList.size() == 0){\n            //if there is no question\n            new MaterialStyledDialog.Builder(this)\n                    .setTitle(\"There is no question\")\n                    .setIcon(R.drawable.lb_ic_shuffle)\n                    .setDescription(\"We don't have any question in this\" + Common.selectedCategory.getName() + \" category\")\n                    .setPositiveText(\"OK\")\n                    .onPositive(new MaterialDialog.SingleButtonCallback() {\n                        @Override\n                        public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\n                            dialog.dismiss();\n                            finish();\n                        }\n                    }).show();\n        }\n        else {\n            //generate answerSheet item from question\n\n            if(Common.answerSheetList.size() > 0){\n                Common.answerSheetList.clear();\n            }\n\n            for(int i=0; i<Common.questionList.size(); i++){\n                Common.answerSheetList.add(new CurrentQuestion(i, Common.ANSWER_TYPE.NO_ANSWER));\n            }\n        }\n    }\n\n    @Override\n    public void onBackPressed() {\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\n        if (drawer.isDrawerOpen(GravityCompat.START)) {\n            drawer.closeDrawer(GravityCompat.START);\n        } else {\n            super.onBackPressed();\n        }\n    }\n\n    @Override\n    public boolean onCreateOptionsMenu(Menu menu) {\n        // Inflate the menu; this adds items to the action bar if it is present.\n        getMenuInflater().inflate(R.menu.question, menu);\n        return true;\n    }\n\n    @Override\n    public boolean onOptionsItemSelected(MenuItem item) {\n        // Handle action bar item clicks here. The action bar will\n        // automatically handle clicks on the Home/Up button, so long\n        // as you specify a parent activity in AndroidManifest.xml.\n        int id = item.getItemId();\n\n        //noinspection SimplifiableIfStatement\n        if (id == R.id.action_settings) {\n            return true;\n        }\n\n        return super.onOptionsItemSelected(item);\n    }\n\n    @SuppressWarnings(\"StatementWithEmptyBody\")\n    @Override\n    public boolean onNavigationItemSelected(MenuItem item) {\n        // Handle navigation view item clicks here.\n        int id = item.getItemId();\n\n        if (id == R.id.nav_home) {\n            // Handle the camera action\n        } else if (id == R.id.nav_gallery) {\n\n        } else if (id == R.id.nav_slideshow) {\n\n        } else if (id == R.id.nav_tools) {\n\n        } else if (id == R.id.nav_share) {\n\n        } else if (id == R.id.nav_send) {\n\n        }\n\n        DrawerLayout drawer = findViewById(R.id.drawer_layout);\n        drawer.closeDrawer(GravityCompat.START);\n        return true;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionActivity.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionActivity.java	(date 1571020870000)
@@ -4,8 +4,6 @@
 import android.os.Bundle;
 import android.os.CountDownTimer;
 import android.support.annotation.NonNull;
-import android.support.design.widget.FloatingActionButton;
-import android.support.design.widget.Snackbar;
 import android.support.design.widget.TabLayout;
 import android.support.v4.view.ViewPager;
 import android.support.v7.widget.GridLayoutManager;
@@ -21,7 +19,6 @@
 import android.support.v7.widget.Toolbar;
 import android.view.Menu;
 import android.view.WindowManager;
-import android.widget.TableLayout;
 import android.widget.TextView;
 
 import com.afollestad.materialdialogs.DialogAction;
@@ -29,6 +26,14 @@
 import com.github.javiersantos.materialstyleddialogs.MaterialStyledDialog;
 import com.hangul.serokorean.R;
 
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.ArrayList;
+import java.util.List;
 import java.util.concurrent.TimeUnit;
 
 import koreanlearning.hangul.serokorean.beginnerone.quiz.DBhelper.DBhelper;
@@ -36,12 +41,12 @@
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.AnswerSheetAdapter;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.adapter.QuestionFragmentsAdapter;
-import koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.common.QuizCommon;
 
 public class QuestionActivity extends AppCompatActivity
         implements NavigationView.OnNavigationItemSelectedListener {
 
-    int time_play = Common.TOTAL_TIME;
+    int time_play = QuizCommon.TOTAL_TIME;
     boolean isAnswerModeView = false;
     RecyclerView answer_sheet_view;
     AnswerSheetAdapter answerSheetAdapter;
@@ -52,8 +57,8 @@
 
     @Override
     protected void onDestroy() {
-        if(Common.countDownTimer != null){
-            Common.countDownTimer.cancel();
+        if(QuizCommon.countDownTimer != null){
+            QuizCommon.countDownTimer.cancel();
         }
         super.onDestroy();
     }
@@ -77,7 +82,7 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_question);
         Toolbar toolbar = findViewById(R.id.toolbar);
-        toolbar.setTitle(Common.selectedCategory.getName());
+        toolbar.setTitle(QuizCommon.selectedCategory.getName());
         setSupportActionBar(toolbar);
         DrawerLayout drawer = findViewById(R.id.drawer_layout);
         NavigationView navigationView = findViewById(R.id.nav_view);
@@ -88,34 +93,33 @@
         navigationView.setNavigationItemSelectedListener(this);
         
         //take questions from DB
-        takeQuestion();
+        Bundle bundle = getIntent().getExtras();
+        int level = bundle.getInt("level");
+        int chapter = bundle.getInt("chapter");
+//        takeQuestion();
+        importQuestion(level, chapter);
 
-        if(Common.questionList.size() > 0){
+        if(QuizCommon.questionList.size() > 0){
 
-            //show textView right answer and textView timer
+            //show textView right answer
             txt_right_answer = findViewById(R.id.txt_question_right);
-//            txt_timer = findViewById(R.id.txt_timer);
-
-//            txt_timer.setVisibility(View.VISIBLE);
             txt_right_answer.setVisibility(View.VISIBLE);
-            txt_right_answer.setText(new StringBuilder(String.format("%d/%d", Common.right_answer_count, Common.questionList.size())));
-
-//            countTimer();
+            txt_right_answer.setText(new StringBuilder(String.format("%d/%d", QuizCommon.right_answer_count, QuizCommon.questionList.size())));
 
             //view
             answer_sheet_view = findViewById(R.id.grid_answer);
             answer_sheet_view.setHasFixedSize(true);
-            if(Common.questionList.size() > 5){ // if question list have size > 5, we will sperate 2 rows
-                answer_sheet_view.setLayoutManager(new GridLayoutManager(this, Common.questionList.size()/2));
+            if(QuizCommon.questionList.size() > 5){ // if question list have size > 5, we will sperate 2 rows
+                answer_sheet_view.setLayoutManager(new GridLayoutManager(this, QuizCommon.questionList.size()/2));
             }
-            answerSheetAdapter = new AnswerSheetAdapter(this, Common.answerSheetList);
+            answerSheetAdapter = new AnswerSheetAdapter(this, QuizCommon.answerSheetList);
             answer_sheet_view.setAdapter(answerSheetAdapter);
             
             viewPager = findViewById(R.id.quizViewpager);
             tabLayout = findViewById(R.id.sliding_tabs);
             
             genFragmentList();
-            QuestionFragmentsAdapter questionFragmentsAdapter = new QuestionFragmentsAdapter(getSupportFragmentManager(), this, Common.fragmentsList);
+            QuestionFragmentsAdapter questionFragmentsAdapter = new QuestionFragmentsAdapter(getSupportFragmentManager(), this, QuizCommon.fragmentsList);
             viewPager.setAdapter(questionFragmentsAdapter);
 
             tabLayout.setupWithViewPager(viewPager);
@@ -162,34 +166,34 @@
                     if(i > 0){
                         if(isScrollingRight()){
                             // get previous when user scroll right
-                            questionFragment = Common.fragmentsList.get(i-1);
+                            questionFragment = QuizCommon.fragmentsList.get(i-1);
                             position = i-1;
                         }
                         else if(isScrollingLeft()){
                             // get next when user scroll left
-                            questionFragment = Common.fragmentsList.get(i+1);
+                            questionFragment = QuizCommon.fragmentsList.get(i+1);
                             position = i+1;
                         }
                         else{
-                            questionFragment = Common.fragmentsList.get(position);
+                            questionFragment = QuizCommon.fragmentsList.get(position);
                         }
                     }
                     else{
-                        questionFragment = Common.fragmentsList.get(0);
+                        questionFragment = QuizCommon.fragmentsList.get(0);
                         position = 0;
                     }
 
                     //if you want to show correct answer, just call function here
                     CurrentQuestion question_state = questionFragment.getSelectedAnswer();
-                    Common.answerSheetList.set(position, question_state);
+                    QuizCommon.answerSheetList.set(position, question_state);
                     answerSheetAdapter.notifyDataSetChanged(); // change color in answer sheet
 
                     countCorrectAnswer();
-                    txt_right_answer.setText(new StringBuilder(String.format("%d", Common.right_answer_count))
+                    txt_right_answer.setText(new StringBuilder(String.format("%d", QuizCommon.right_answer_count))
                             .append("/")
-                            .append(String.format("%d", Common.questionList.size())).toString());
+                            .append(String.format("%d", QuizCommon.questionList.size())).toString());
 
-                    if(question_state.getType() != Common.ANSWER_TYPE.NO_ANSWER){
+                    if(question_state.getType() != QuizCommon.ANSWER_TYPE.NO_ANSWER){
                         questionFragment.showCorrectAnswer();
                         questionFragment.disableAnswer();
                     }
@@ -209,77 +213,83 @@
 
     private void countCorrectAnswer() {
         // reset variable
-        Common.right_answer_count = Common.wrong_answer_counnt = 0;
-        for(CurrentQuestion item : Common.answerSheetList){
-            if(item.getType() == Common.ANSWER_TYPE.RIGHT_ANSWER){
-                Common.right_answer_count++;
+        QuizCommon.right_answer_count = QuizCommon.wrong_answer_counnt = 0;
+        for(CurrentQuestion item : QuizCommon.answerSheetList){
+            if(item.getType() == QuizCommon.ANSWER_TYPE.RIGHT_ANSWER){
+                QuizCommon.right_answer_count++;
             }
-            else if(item.getType() == Common.ANSWER_TYPE.WRONG_ANSWER){
-                Common.wrong_answer_counnt++;
+            else if(item.getType() == QuizCommon.ANSWER_TYPE.WRONG_ANSWER){
+                QuizCommon.wrong_answer_counnt++;
             }
         }
     }
 
     private void genFragmentList() {
-        for(int i=0; i<Common.questionList.size(); ++i){
+        for(int i = 0; i< QuizCommon.questionList.size(); ++i){
             Bundle bundle = new Bundle();
             bundle.putInt("index", i);
             QuestionFragment fragment = new QuestionFragment();
             fragment.setArguments(bundle);
 
-            Common.fragmentsList.add(fragment);
+            QuizCommon.fragmentsList.add(fragment);
         }
     }
 
+    private void importQuestion(int level, int chapter){
+        StringBuilder quizName = new StringBuilder();
+        quizName.append("level");
+        quizName.append(Integer.toString(level));
+        quizName.append("chapter");
+        quizName.append(Integer.toString(chapter));
+        String jsonString = loadJsonFromAssert(quizName.toString());
+        List<Question> questionList = new ArrayList<>();
 
-    private void countTimer() {
-        if(Common.countDownTimer == null){
-            Common.countDownTimer = new CountDownTimer(Common.TOTAL_TIME, 1000) {
+        try{
+            JSONObject jsonObject = new JSONObject(jsonString);
+            JSONArray questions = jsonObject.getJSONArray("questions");
+            for(int i=0; i<questions.length(); ++i){
+                JSONObject questionObj = questions.getJSONObject(i);
 
-                @Override
-                public void onTick(long millisUntilFinished) {
-                    txt_timer.setText(String.format("%02d:%02d",
-                            TimeUnit.MILLISECONDS.toMinutes(1),
-                            TimeUnit.MILLISECONDS.toSeconds(1) -
-                                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(1))));
-                    time_play -= 1000;
-                }
+                String questionText = questionObj.getString("question");
+                int id = questionObj.getInt("id");
+                String answerA = questionObj.getString("answerA");
+                String answerB = questionObj.getString("answerB");
+                String answerC = questionObj.getString("answerC");
+                String answerD = questionObj.getString("answerD");
+                String correctAns = questionObj.getString("correct_answer");
+                questionList.add(new Question(id, questionText, answerA, answerB, answerC, answerD, correctAns));
+            }
 
-                @Override
-                public void onFinish() {
-
-                }
-            }.start();
-        }
-        else{
-            Common.countDownTimer.cancel();
-            Common.countDownTimer = new CountDownTimer(Common.TOTAL_TIME, 1000) {
+            QuizCommon.questionList = questionList;
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+    }
 
-                @Override
-                public void onTick(long millisUntilFinished) {
-                    txt_timer.setText(String.format("%02d:%02d",
-                            TimeUnit.MILLISECONDS.toMinutes(1),
-                            TimeUnit.MILLISECONDS.toSeconds(1) -
-                                    TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(1))));
-                    time_play -= 1000;
-                }
-
-                @Override
-                public void onFinish() {
-
-                }
-            }.start();
+    private String loadJsonFromAssert(String file){
+        String json = "";
+        try{
+            InputStream inputStream = getAssets().open(file);
+            int size = inputStream.available();
+            byte[] buffer = new byte[size];
+            inputStream.read(buffer);
+            inputStream.close();
+            json = new String(buffer, "UTF-8");
+        } catch (IOException e) {
+            e.printStackTrace();
         }
+        return json;
     }
 
     private void takeQuestion() {
-        Common.questionList = DBhelper.getInstance(this).getQuestionByCategory(Common.selectedCategory.getId());
-        if(Common.questionList.size() == 0){
+        QuizCommon.questionList = DBhelper.getInstance(this).getQuestionByCategory(QuizCommon.selectedCategory.getId());
+
+        if(QuizCommon.questionList.size() == 0){
             //if there is no question
             new MaterialStyledDialog.Builder(this)
                     .setTitle("There is no question")
                     .setIcon(R.drawable.lb_ic_shuffle)
-                    .setDescription("We don't have any question in this" + Common.selectedCategory.getName() + " category")
+                    .setDescription("We don't have any question in this" + QuizCommon.selectedCategory.getName() + " category")
                     .setPositiveText("OK")
                     .onPositive(new MaterialDialog.SingleButtonCallback() {
                         @Override
@@ -292,12 +302,12 @@
         else {
             //generate answerSheet item from question
 
-            if(Common.answerSheetList.size() > 0){
-                Common.answerSheetList.clear();
+            if(QuizCommon.answerSheetList.size() > 0){
+                QuizCommon.answerSheetList.clear();
             }
 
-            for(int i=0; i<Common.questionList.size(); i++){
-                Common.answerSheetList.add(new CurrentQuestion(i, Common.ANSWER_TYPE.NO_ANSWER));
+            for(int i = 0; i< QuizCommon.questionList.size(); i++){
+                QuizCommon.answerSheetList.add(new CurrentQuestion(i, QuizCommon.ANSWER_TYPE.NO_ANSWER));
             }
         }
     }
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.webview;\n\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.Build;\nimport android.support.v4.app.Fragment;\nimport android.support.v4.app.FragmentManager;\nimport android.support.v4.app.FragmentPagerAdapter;\nimport android.support.v7.app.AppCompatActivity;\nimport android.os.Bundle;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.view.WindowManager;\nimport android.webkit.JavascriptInterface;\nimport android.webkit.WebChromeClient;\nimport android.webkit.WebResourceRequest;\nimport android.webkit.WebSettings;\nimport android.webkit.WebView;\nimport android.webkit.WebViewClient;\nimport android.widget.Toast;\n\n\nimport com.hangul.serokorean.R;\nimport java.util.ArrayList;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;\n\n\npublic class BeginnerOneWebView extends AppCompatActivity implements ParentRequestInterface{\n\n    private SectionsPagerAdapter sectionsPagerAdapter;\n    private CustomViewPager customViewPager;\n\n    private int numberOfPages = 0;\n    private int currentPage = 0;\n    private int currentChapterNum = 0;\n    private String currentChapter = \"\";\n    private ArrayList<String> htmlFiles = new ArrayList<>();\n    private int isPrevious = 0;\n\n    public void fullScreencall() {\n        if(Build.VERSION.SDK_INT < 19){\n            View v = this.getWindow().getDecorView();\n            v.setSystemUiVisibility(View.GONE);\n        } else {\n            //for higher api versions.\n            View decorView = getWindow().getDecorView();\n            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;\n            decorView.setSystemUiVisibility(uiOptions);\n            getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n        }\n    }\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        fullScreencall();\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main_webview_test);\n\n        //bundle gets passed in parameters when chapters' onClick from the Home\n        Bundle bundle = getIntent().getExtras();\n        StringBuilder stringBuilderPageNum = new StringBuilder();\n        StringBuilder stringBuilderChapNum = new StringBuilder();\n\n        //check bundle to see if it's null\n        if(bundle == null){\n//            textView.setText(\"bundle error\");\n        }\n        //if not, stores the parameters are passed in\n        else{\n            //bundle is like a Map, matches key and stores the value\n            numberOfPages = bundle.getInt(\"pages\");\n            currentChapter = bundle.getString(\"chapter\");\n//            isPrevious = bundle.getInt(\"previous\");\n            stringBuilderPageNum.append(bundle.getString(\"chapter\"));\n            stringBuilderPageNum.append(\" number of pages:\");\n            stringBuilderPageNum.append(Integer.toString(bundle.getInt(\"pages\")));\n\n            //check the length of the string, and gets the number as a substring, 0-9\n            if(currentChapter.length()<=9){\n                stringBuilderChapNum.append(currentChapter.substring(8,9));\n            }\n            //number greater than 9\n            else{\n                stringBuilderChapNum.append(currentChapter.substring(8,10));\n            }\n            currentChapterNum = Integer.parseInt(stringBuilderChapNum.toString());\n        }\n\n        // Create the adapter that will return a fragment for each. primary sections of the activity.\n        sectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager(), customViewPager, this);\n\n        // Set up the ViewPager with the sections adapter.\n        customViewPager = (CustomViewPager) findViewById(R.id.container);\n        customViewPager.setAdapter(sectionsPagerAdapter);\n        customViewPager.setOffscreenPageLimit(2);\n    }\n\n\n    @Override\n    public void setViewPagerStatus(Boolean b) { customViewPager.setPagingEnabled(b); }\n\n    public static class PlaceholderFragment extends Fragment{\n\n        private static final String ARG_SECTION_NUMBER = \"section_number\";\n        private static final String CURRENT_CHAPTER = \"current_chapter\";\n        private static final String NUMBER_OF_PAGES = \"number_of_pages\";\n        private int position;\n        private int currentChapterNum;\n        private int numberOfPages;\n        private BeginnerOneWebView activity;\n        private CustomViewPager viewpager;\n        private BeginnerOneWebView parentActivity;\n\n        public static PlaceholderFragment newInstance(int position , int chapterNum, int numberOfPages) {\n            PlaceholderFragment fragment = new PlaceholderFragment();\n            Bundle args = new Bundle();\n            args.putInt(ARG_SECTION_NUMBER, position);\n            args.putInt(CURRENT_CHAPTER, chapterNum);\n            args.putInt(NUMBER_OF_PAGES, numberOfPages);\n            fragment.setArguments(args);\n            return fragment;\n        }\n\n        @Override\n        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n            Bundle arguments = getArguments();\n            String url=\"\";\n            String lastPage=\"\";\n            ArrayList<String> htmlFiles = new ArrayList<>();\n\n            position = arguments.getInt(ARG_SECTION_NUMBER);\n            currentChapterNum = arguments.getInt(CURRENT_CHAPTER);\n            numberOfPages = arguments.getInt(NUMBER_OF_PAGES);\n            parentActivity = (BeginnerOneWebView) getActivity();\n\n            View rootView = inflater.inflate(R.layout.fragment_main, container, false);\n            final CustomWebView webView = rootView.findViewById(R.id.webView);\n            webView.setFragment(this);\n\n            StringBuilder stringBuilder = new StringBuilder();\n            stringBuilder.append(\"file:///android_asset/level 1/chapter \");\n            stringBuilder.append(Integer.toString(currentChapterNum));\n            stringBuilder.append(\"/\");\n\n            for(int i=0; i<numberOfPages; ++i){\n                htmlFiles.add(stringBuilder.toString() + Integer.toString(i) + \".html\");\n            }\n\n            url = htmlFiles.get(position);\n            lastPage = htmlFiles.get(numberOfPages-1);\n\n            WebSettings settings = webView.getSettings();\n            webView.setWebChromeClient(new WebChromeClient());\n            webView.setScrollContainer(false);\n            webView.setVerticalScrollBarEnabled(false);\n            webView.setHorizontalScrollBarEnabled(false);\n            webView.setWebViewClient(new WebViewClient(){\n                @Override\n                public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {\n                    String url = request.getUrl().toString();\n                    if(url.contains(\"chapteronequiz\")){\n                        Intent intent = new Intent(getActivity(), QuizCategories.class); //ChapterOneQuiz.class\n                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);\n                        startActivity(intent);\n                    }\n                    return true;\n                }\n            });\n\n            settings.setJavaScriptEnabled(true);\n            settings.setBuiltInZoomControls(true);\n            settings.setSupportZoom(true);\n            settings.setDisplayZoomControls(false);\n            settings.setLoadWithOverviewMode(true);\n            settings.setUseWideViewPort(false);\n\n            webView.loadUrl(url);\n            return rootView;\n        }\n\n        public void setViewPager(boolean b) {\n            parentActivity.setViewPagerStatus(b);\n        }\n        public void setActivity(BeginnerOneWebView activity) {\n            this.activity = activity;\n        }\n        public void setPager(CustomViewPager viewpager) {\n            this.viewpager = viewpager;\n        }\n        public PlaceholderFragment() { }\n\n        public class WebAppInterface {\n            Context mContext;\n\n            /** Instantiate the interface and set the context */\n            WebAppInterface(Context c) {\n                mContext = c;\n            }\n\n            /** Show a toast from the web page */\n            @JavascriptInterface\n            public void showToast(String toast) {\n                Toast.makeText(mContext, toast, Toast.LENGTH_SHORT).show();\n            }\n        }\n    }\n\n    public class SectionsPagerAdapter extends FragmentPagerAdapter {\n\n        CustomViewPager viewPager;\n        BeginnerOneWebView activity;\n\n        public SectionsPagerAdapter(FragmentManager fm, CustomViewPager viewPager, BeginnerOneWebView activity) {\n            super(fm);\n            this.viewPager=viewPager;\n            this.activity=activity;\n        }\n\n        @Override\n        public Fragment getItem(int position) {\n            // getItem is called to instantiate the fragment for the given page.\n            // Return a PlaceholderFragment (defined as a static inner class below).\n            PlaceholderFragment fragment= PlaceholderFragment.newInstance(position, currentChapterNum, numberOfPages);\n            fragment.setActivity(activity);\n            fragment.setPager(viewPager);\n            return fragment;\n        }\n\n        @Override\n        public int getCount() { return numberOfPages; }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/webview/BeginnerOneWebView.java	(date 1571021721000)
@@ -1,7 +1,5 @@
 package koreanlearning.hangul.serokorean.beginnerone.webview;
 
-
-import android.content.Context;
 import android.content.Intent;
 import android.os.Build;
 import android.support.v4.app.Fragment;
@@ -13,7 +11,7 @@
 import android.view.View;
 import android.view.ViewGroup;
 import android.view.WindowManager;
-import android.webkit.JavascriptInterface;
+import android.webkit.PermissionRequest;
 import android.webkit.WebChromeClient;
 import android.webkit.WebResourceRequest;
 import android.webkit.WebSettings;
@@ -25,7 +23,7 @@
 import com.hangul.serokorean.R;
 import java.util.ArrayList;
 
-import koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionActivity;
 
 
 public class BeginnerOneWebView extends AppCompatActivity implements ParentRequestInterface{
@@ -157,12 +155,39 @@
             webView.setScrollContainer(false);
             webView.setVerticalScrollBarEnabled(false);
             webView.setHorizontalScrollBarEnabled(false);
+            webView.setWebChromeClient(new WebChromeClient(){
+                @Override
+                public void onPermissionRequest(final PermissionRequest request) {
+                    request.grant(request.getResources());
+                }
+            });
+
             webView.setWebViewClient(new WebViewClient(){
+
+                public void onReceivedError(WebView view, int errorCode, String description, String failingUrl){
+                    if(failingUrl.contains("chapter")){
+                        //level1chapter1
+                        Bundle args = new Bundle();
+                        args.putInt("level", Integer.parseInt(failingUrl.substring(12,13)));
+                        args.putInt("chapter", Integer.parseInt(failingUrl.substring(20,21)));
+                        Intent intent = new Intent(getActivity(), QuestionActivity.class); //ChapterOneQuiz.class
+                        intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
+                        startActivity(intent);
+                    }
+                    else{
+                        Toast.makeText(getActivity(), "System error", Toast.LENGTH_SHORT).show();
+                    }
+                }
+
                 @Override
                 public boolean shouldOverrideUrlLoading(WebView view, WebResourceRequest request) {
                     String url = request.getUrl().toString();
-                    if(url.contains("chapteronequiz")){
-                        Intent intent = new Intent(getActivity(), QuizCategories.class); //ChapterOneQuiz.class
+                    if(url.contains("chapter")){
+//                        Intent intent = new Intent(getActivity(), QuizCategories.class); //ChapterOneQuiz.class
+                        Bundle args = new Bundle();
+                        args.putInt("level", Integer.parseInt(url.substring(5,6)));
+                        args.putInt("chapter", Integer.parseInt(url.substring(13)));
+                        Intent intent = new Intent(getActivity(), QuestionActivity.class); //ChapterOneQuiz.class
                         intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP | Intent.FLAG_ACTIVITY_NEW_TASK);
                         startActivity(intent);
                     }
@@ -191,21 +216,6 @@
             this.viewpager = viewpager;
         }
         public PlaceholderFragment() { }
-
-        public class WebAppInterface {
-            Context mContext;
-
-            /** Instantiate the interface and set the context */
-            WebAppInterface(Context c) {
-                mContext = c;
-            }
-
-            /** Show a toast from the web page */
-            @JavascriptInterface
-            public void showToast(String toast) {
-                Toast.makeText(mContext, toast, Toast.LENGTH_SHORT).show();
-            }
-        }
     }
 
     public class SectionsPagerAdapter extends FragmentPagerAdapter {
Index: app/src/main/assets/level 1/chapter 1/0.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html>\n\n<head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1\"/>\n    <title>L1 - Chapter 1 - Page 1</title>\n\n    <!-- Link to Stylesheet -->\n    <link href=\"../../css/textstyles.css\" rel=\"stylesheet\">\n\n    <!-- Link to Google Fonts -->\n    <link href=\"https://fonts.googleapis.com/css?family=Nanum+Myeongjo|Open+Sans\" rel=\"stylesheet\">\n    <link href=\"https://fonts.googleapis.com/css?family=Merriweather\" rel=\"stylesheet\">\n\n    <!-- Link to Javascript -->\n    <script src=\"../../js/main.js\" type=\"text/javascript\"></script>\n\n</head>\n\n<body>\n    <div class=\"mtextcon\">\n            <div class=\"stextcon\">\n        <div class=\"mheader\">Chapter 1 </div><br>\n        <div class=\"msubheader\">Reading Korean Consonants</div><br>\n        <div class=\"mheadpara\">\n                <p style=\"text-indent: 0; text-align: center;\"><b>Chapter Insight</b></p>\n                <p style=\"padding-left: 8px; padding-right: 8px;\"><i>Some people have difficulty dealing with change or new things. If you’re one of those people then\n                    just believe me, this is a good change. Introducing the best writing system in the world—Hangul\n                    (lit. “Korean writing”). It’s arguably more consistent, more logical, and easier to learn than any\n                    other writing system in the world. In fact, the hardest part is just going to be pronouncing it\n                    right.</i></p>\n        </div>\n        <div class=\"mstandardpara\">\n            <p>So where did this amazing writing system come from and why have I never heard of it? The creation of\n                Hangul is credited to the legendary King Sejong (세종대왕) who was born in AD 1397. Before the times of\n                King Sejong, Koreans were completely reliant on borrowed Chinese characters. Chinese writing had been\n                adapted, albeit messily, to work with Korean.</p>\n            <p>I know what you’re wondering. <i>Why, if they already had a writing system, did King Sejong up and\n                    decide to invent a new one?</i> First of all, if you’ve ever tried to learn Chinese characters\n                you’ll understand that it’s a non-trivial task (to put it lightly). Basically, you have to remember\n                thousands of unique characters, many with more than ten strokes. Even natives spend years learning how\n                to read and write fluently. This was also true in Korea, where only the upper class could afford the\n                long and expensive education required to learn to read and write. </p>\n            <p>Secondly, despite Western stereotypes about Asian languages, the fact is that Chinese and Korean are\n                fundamentally different languages with different roots, sounds, sentence structure, etc. It’s not an\n                exaggeration to say that it would be as difficult to figure out a way to write English in Chinese\n                characters as it was to write Korean in Chinese characters. Nevertheless, given no viable alternative,\n                the Koreans had since ancient times been using Chinese characters to write. What a headache!</p>\n            <p>So along comes King Sejong, who decides to do something to address these problems. He wants to create a\n                writing system that is easy enough to be accessible to the lower class (those with limited educational\n                opportunity), and one that gives Korea a greater sense of national identity. While many people have\n                invented new alphabets and languages throughout history, what made the difference in adoption here is\n                that this time it was done by royalty, and it was done in an extremely logical and scientific way. </p>\n\n            <!-- Author's Note -->\n            <div id=\"myAuthornote\" class=\"authornote\" onclick=\"closeNav()\">\n                <p>We hope you don’t mind these\n                    little historical tidbits. We firmly believe that history\n                    and culture are so closely intertwined with languages that you can’t really gain a good\n                    understanding of one without the others. We promise all this information will be useful later\n                    on. So, now we can really get to the meat and potatoes of Hangul.</p>\n            </div>\n            <span onclick=\"openNav()\">\n                <div class=\"authorcard\">\n                    <div class=\"authorarrow\"><img src=\"../../img/leftarrow.png\" alt=\"left\"></div>\n                </div>\n            </span>\n\n            <p style=\"margin-right:15px\">Historically Korea has received relatively minimal attention internationally, however since the\n                invention of Hangul it’s gained tremendous prestige and Korea is playing an ever more important role\n                politically, economically, and especially culturally in the modern world. More and more people are\n                learning about Korea and how’s it’s unique from its bigger and traditionally more influential\n                neighbors, China and Japan.</p>\n\n        </div>\n        <a href=\"http://chapteronequiz\">Quiz</a>\n    </div>\n    </div>\n</body>\n\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/level 1/chapter 1/0.html	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/assets/level 1/chapter 1/0.html	(date 1571017333000)
@@ -74,7 +74,7 @@
                 neighbors, China and Japan.</p>
 
         </div>
-        <a href="http://chapteronequiz">Quiz</a>
+        <a href="http://level1chapter1">Quiz</a>
     </div>
     </div>
 </body>
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz;\n\nimport android.content.Context;\nimport android.graphics.Color;\nimport android.graphics.Typeface;\nimport android.net.Uri;\nimport android.os.Bundle;\nimport android.support.v4.app.Fragment;\nimport android.text.TextUtils;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.CheckBox;\nimport android.widget.CompoundButton;\nimport android.widget.FrameLayout;\nimport android.widget.ImageView;\nimport android.widget.ProgressBar;\nimport android.widget.TextView;\nimport android.widget.Toast;\n\nimport com.hangul.serokorean.R;\n\nimport javax.security.auth.callback.Callback;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.CurrentQuestion;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.quizInterface.IQuestion;\n\npublic class QuestionFragment extends Fragment implements IQuestion {\n\n    TextView txt_question_text;\n    CheckBox ckbA, ckbB, ckbC, ckbD;\n    FrameLayout layout_image;\n    ProgressBar progressBar;\n\n    Question question;\n    int questionIndex = -1;\n\n\n    public QuestionFragment() {\n        // Required empty public constructor\n    }\n\n    public static QuestionFragment newInstance(String param1, String param2) {\n        QuestionFragment fragment = new QuestionFragment();\n        Bundle args = new Bundle();\n\n        fragment.setArguments(args);\n        return fragment;\n    }\n\n    @Override\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n\n        }\n    }\n\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        View itemView = inflater.inflate(R.layout.fragment_question, container, false);\n\n        //get question\n        questionIndex = getArguments().getInt(\"index\", -1);\n        question = Common.questionList.get(questionIndex);\n\n        if(question != null){\n\n            layout_image = itemView.findViewById(R.id.layout_image);\n            progressBar = itemView.findViewById(R.id.progress_bar);\n\n            if(question.isImageQuestion()){\n                ImageView img_question = itemView.findViewById(R.id.img_question);\n                //TODO: Picasso.get().load(question.getQuestionImage()).into(img_question, new Callback())\n            }\n            else{\n                layout_image.setVisibility(View.GONE);\n            }\n\n\n            //view\n            txt_question_text = itemView.findViewById(R.id.txt_question_text);\n            txt_question_text.setText(question.getQuestionText());\n\n            ckbA = itemView.findViewById(R.id.ckbA);\n            ckbA.setText(question.getAnswerA());\n            ckbA.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n                @Override\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                    if(isChecked){\n                        Common.selected_values.add(ckbA.getText().toString());\n                    }\n                    else{\n                        Common.selected_values.remove(ckbA.getText().toString());\n                    }\n                }\n            });\n\n            ckbB = itemView.findViewById(R.id.ckbB);\n            ckbB.setText(question.getAnswerB());\n            ckbB.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n                @Override\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                    if(isChecked){\n                        Common.selected_values.add(ckbB.getText().toString());\n                    }\n                    else{\n                        Common.selected_values.remove(ckbB.getText().toString());\n                    }\n                }\n            });\n\n            ckbC = itemView.findViewById(R.id.ckbC);\n            ckbC.setText(question.getAnswerC());\n            ckbC.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n                @Override\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                    if(isChecked){\n                        Common.selected_values.add(ckbC.getText().toString());\n                    }\n                    else{\n                        Common.selected_values.remove(ckbC.getText().toString());\n                    }\n                }\n            });\n\n            ckbD = itemView.findViewById(R.id.ckbD);\n            ckbD.setText(question.getAnswerD());\n            ckbD.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n                @Override\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                    if(isChecked){\n                        Common.selected_values.add(ckbD.getText().toString());\n                    }\n                    else{\n                        Common.selected_values.remove(ckbD.getText().toString());\n                    }\n                }\n            });\n        }\n\n        // Inflate the layout for this fragment\n        return itemView;\n    }\n\n    @Override\n    public CurrentQuestion getSelectedAnswer() {\n        // it will return state of answer (right or wrong)\n        CurrentQuestion currentQuestion = new CurrentQuestion(questionIndex, Common.ANSWER_TYPE.NO_ANSWER);\n        StringBuilder result = new StringBuilder();\n        if(Common.selected_values.size() > 1){\n            // multiple choices' answer will be array\n            // ex. arr[0] = A. New York\n            // ex. arr[1] = B. Paris\n\n            Object[] arrayAnswer = Common.selected_values.toArray();\n            for(int i=0; i<arrayAnswer.length; ++i){\n                if(i < arrayAnswer.length -1){\n                    // Take first letter of the answer\n                    // ex. A. New York => only take A\n                    result.append(new StringBuilder(((String)arrayAnswer[i]).substring(0,1)).append(\",\"));\n                }\n                else{\n                    result.append(new StringBuilder((String)arrayAnswer[i]).substring(0,1));\n                }\n            }\n        }\n        else if(Common.selected_values.size() == 1){\n            Object[] arrayAnswer = Common.selected_values.toArray();\n            result.append((String)arrayAnswer[0]).substring(0,1);\n        }\n\n        if(question != null){\n            // compare correctAnswer with user answer\n            if(!TextUtils.isEmpty(result)){\n                if(result.toString().equals(question.getCorrectAnswer())){\n                    currentQuestion.setType(Common.ANSWER_TYPE.RIGHT_ANSWER);\n                }\n                else{\n                    currentQuestion.setType(Common.ANSWER_TYPE.WRONG_ANSWER);\n                }\n            }\n            else{\n                currentQuestion.setType(Common.ANSWER_TYPE.NO_ANSWER);\n            }\n        }\n        else{\n            Toast.makeText(getContext(), \"Cannot get quiz\", Toast.LENGTH_SHORT).show();\n        }\n        // always clear selected_value when it's done\n        Common.selected_values.clear();\n\n        return currentQuestion;\n    }\n\n    @Override\n    public void showCorrectAnswer() {\n        // bold correct answer\n        String[] correctAnswer = question.getCorrectAnswer().split(\",\");\n        for(String answer : correctAnswer){\n            if(answer.equals(\"A\")){\n                ckbA.setTypeface(null, Typeface.BOLD);\n                ckbA.setTextColor(Color.RED);\n            }\n            else if(answer.equals(\"B\")){\n                ckbB.setTypeface(null, Typeface.BOLD);\n                ckbB.setTextColor(Color.RED);\n            }\n            else if(answer.equals(\"C\")){\n                ckbC.setTypeface(null, Typeface.BOLD);\n                ckbC.setTextColor(Color.RED);\n            }\n            else if(answer.equals(\"D\")){\n                ckbD.setTypeface(null, Typeface.BOLD);\n                ckbD.setTextColor(Color.RED);\n            }\n        }\n    }\n\n    @Override\n    public void disableAnswer() {\n        ckbA.setEnabled(false);\n        ckbB.setEnabled(false);\n        ckbC.setEnabled(false);\n        ckbD.setEnabled(false);\n    }\n\n    @Override\n    public void resetQuestion() {\n\n        //enable checkbox\n        ckbA.setEnabled(true);\n        ckbB.setEnabled(true);\n        ckbC.setEnabled(true);\n        ckbD.setEnabled(true);\n\n        //remove all selected\n        ckbA.setChecked(false);\n        ckbB.setChecked(false);\n        ckbC.setChecked(false);\n        ckbD.setChecked(false);\n\n        //remove all bold on text\n        ckbA.setTypeface(null, Typeface.NORMAL);\n        ckbA.setTextColor(Color.BLACK);\n        ckbB.setTypeface(null, Typeface.NORMAL);\n        ckbB.setTextColor(Color.BLACK);\n        ckbC.setTypeface(null, Typeface.NORMAL);\n        ckbC.setTextColor(Color.BLACK);\n        ckbD.setTypeface(null, Typeface.NORMAL);\n        ckbD.setTextColor(Color.BLACK);\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionFragment.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/QuestionFragment.java	(date 1571017333000)
@@ -1,9 +1,7 @@
 package koreanlearning.hangul.serokorean.beginnerone.quiz;
 
-import android.content.Context;
 import android.graphics.Color;
 import android.graphics.Typeface;
-import android.net.Uri;
 import android.os.Bundle;
 import android.support.v4.app.Fragment;
 import android.text.TextUtils;
@@ -20,11 +18,9 @@
 
 import com.hangul.serokorean.R;
 
-import javax.security.auth.callback.Callback;
-
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.CurrentQuestion;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Question;
-import koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.common.QuizCommon;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.quizInterface.IQuestion;
 
 public class QuestionFragment extends Fragment implements IQuestion {
@@ -65,7 +61,7 @@
 
         //get question
         questionIndex = getArguments().getInt("index", -1);
-        question = Common.questionList.get(questionIndex);
+        question = QuizCommon.questionList.get(questionIndex);
 
         if(question != null){
 
@@ -91,10 +87,10 @@
                 @Override
                 public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     if(isChecked){
-                        Common.selected_values.add(ckbA.getText().toString());
+                        QuizCommon.selected_values.add(ckbA.getText().toString());
                     }
                     else{
-                        Common.selected_values.remove(ckbA.getText().toString());
+                        QuizCommon.selected_values.remove(ckbA.getText().toString());
                     }
                 }
             });
@@ -105,10 +101,10 @@
                 @Override
                 public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     if(isChecked){
-                        Common.selected_values.add(ckbB.getText().toString());
+                        QuizCommon.selected_values.add(ckbB.getText().toString());
                     }
                     else{
-                        Common.selected_values.remove(ckbB.getText().toString());
+                        QuizCommon.selected_values.remove(ckbB.getText().toString());
                     }
                 }
             });
@@ -119,10 +115,10 @@
                 @Override
                 public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     if(isChecked){
-                        Common.selected_values.add(ckbC.getText().toString());
+                        QuizCommon.selected_values.add(ckbC.getText().toString());
                     }
                     else{
-                        Common.selected_values.remove(ckbC.getText().toString());
+                        QuizCommon.selected_values.remove(ckbC.getText().toString());
                     }
                 }
             });
@@ -133,10 +129,10 @@
                 @Override
                 public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                     if(isChecked){
-                        Common.selected_values.add(ckbD.getText().toString());
+                        QuizCommon.selected_values.add(ckbD.getText().toString());
                     }
                     else{
-                        Common.selected_values.remove(ckbD.getText().toString());
+                        QuizCommon.selected_values.remove(ckbD.getText().toString());
                     }
                 }
             });
@@ -149,14 +145,14 @@
     @Override
     public CurrentQuestion getSelectedAnswer() {
         // it will return state of answer (right or wrong)
-        CurrentQuestion currentQuestion = new CurrentQuestion(questionIndex, Common.ANSWER_TYPE.NO_ANSWER);
+        CurrentQuestion currentQuestion = new CurrentQuestion(questionIndex, QuizCommon.ANSWER_TYPE.NO_ANSWER);
         StringBuilder result = new StringBuilder();
-        if(Common.selected_values.size() > 1){
+        if(QuizCommon.selected_values.size() > 1){
             // multiple choices' answer will be array
             // ex. arr[0] = A. New York
             // ex. arr[1] = B. Paris
 
-            Object[] arrayAnswer = Common.selected_values.toArray();
+            Object[] arrayAnswer = QuizCommon.selected_values.toArray();
             for(int i=0; i<arrayAnswer.length; ++i){
                 if(i < arrayAnswer.length -1){
                     // Take first letter of the answer
@@ -168,8 +164,8 @@
                 }
             }
         }
-        else if(Common.selected_values.size() == 1){
-            Object[] arrayAnswer = Common.selected_values.toArray();
+        else if(QuizCommon.selected_values.size() == 1){
+            Object[] arrayAnswer = QuizCommon.selected_values.toArray();
             result.append((String)arrayAnswer[0]).substring(0,1);
         }
 
@@ -177,21 +173,21 @@
             // compare correctAnswer with user answer
             if(!TextUtils.isEmpty(result)){
                 if(result.toString().equals(question.getCorrectAnswer())){
-                    currentQuestion.setType(Common.ANSWER_TYPE.RIGHT_ANSWER);
+                    currentQuestion.setType(QuizCommon.ANSWER_TYPE.RIGHT_ANSWER);
                 }
                 else{
-                    currentQuestion.setType(Common.ANSWER_TYPE.WRONG_ANSWER);
+                    currentQuestion.setType(QuizCommon.ANSWER_TYPE.WRONG_ANSWER);
                 }
             }
             else{
-                currentQuestion.setType(Common.ANSWER_TYPE.NO_ANSWER);
+                currentQuestion.setType(QuizCommon.ANSWER_TYPE.NO_ANSWER);
             }
         }
         else{
             Toast.makeText(getContext(), "Cannot get quiz", Toast.LENGTH_SHORT).show();
         }
         // always clear selected_value when it's done
-        Common.selected_values.clear();
+        QuizCommon.selected_values.clear();
 
         return currentQuestion;
     }
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/AnswerSheetAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.adapter;\n\nimport android.content.Context;\nimport android.support.annotation.NonNull;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\n\nimport com.hangul.serokorean.R;\n\nimport java.util.List;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.CurrentQuestion;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;\n\npublic class AnswerSheetAdapter extends RecyclerView.Adapter<AnswerSheetAdapter.MyViewHolder> {\n    Context context;\n    List<CurrentQuestion> currentQuestionList;\n\n    public AnswerSheetAdapter(Context context, List<CurrentQuestion> currentQuestionList) {\n        this.context = context;\n        this.currentQuestionList = currentQuestionList;\n    }\n\n    @NonNull\n    @Override\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\n        View itemView = LayoutInflater.from(context).inflate(R.layout.layout_grid_answer_sheet_item, viewGroup, false);\n        return new MyViewHolder(itemView);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull MyViewHolder myViewHolder, int i) {\n        if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.RIGHT_ANSWER){\n            myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_right_answer);\n        }\n        else if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.WRONG_ANSWER){\n            myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_wrong_answer);\n        }\n        else if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.NO_ANSWER){\n            myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_no_answer);\n        }\n    }\n\n    @Override\n    public int getItemCount() {\n        return currentQuestionList.size();\n    }\n\n    public class MyViewHolder extends RecyclerView.ViewHolder {\n        View question_item;\n        public MyViewHolder(View itemView){\n            super(itemView);\n            question_item = itemView.findViewById(R.id.question_item);\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/AnswerSheetAdapter.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/AnswerSheetAdapter.java	(date 1571017333000)
@@ -12,7 +12,7 @@
 import java.util.List;
 
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.CurrentQuestion;
-import koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.common.QuizCommon;
 
 public class AnswerSheetAdapter extends RecyclerView.Adapter<AnswerSheetAdapter.MyViewHolder> {
     Context context;
@@ -32,13 +32,13 @@
 
     @Override
     public void onBindViewHolder(@NonNull MyViewHolder myViewHolder, int i) {
-        if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.RIGHT_ANSWER){
+        if(currentQuestionList.get(i).getType() == QuizCommon.ANSWER_TYPE.RIGHT_ANSWER){
             myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_right_answer);
         }
-        else if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.WRONG_ANSWER){
+        else if(currentQuestionList.get(i).getType() == QuizCommon.ANSWER_TYPE.WRONG_ANSWER){
             myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_wrong_answer);
         }
-        else if(currentQuestionList.get(i).getType() == Common.ANSWER_TYPE.NO_ANSWER){
+        else if(currentQuestionList.get(i).getType() == QuizCommon.ANSWER_TYPE.NO_ANSWER){
             myViewHolder.question_item.setBackgroundResource(R.drawable.grid_question_no_answer);
         }
     }
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/Question.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.Model;\n\npublic class Question {\n    private int id;\n    private String QuestionText, questionImage, answerA, answerB, answerC, answerD, correctAnswer;\n    private boolean isImageQuestion;\n    private int categoryId;\n\n    public Question() {\n    }\n\n    public Question(int id, String questionText, String questionImage, String answerA, String answerB, String answerC, String answerD, String correctAnswer, boolean isImageQuestion, int categoryId) {\n        this.id = id;\n        QuestionText = questionText;\n        this.questionImage = questionImage;\n        this.answerA = answerA;\n        this.answerB = answerB;\n        this.answerC = answerC;\n        this.answerD = answerD;\n        this.correctAnswer = correctAnswer;\n        this.isImageQuestion = isImageQuestion;\n        this.categoryId = categoryId;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getQuestionText() {\n        return QuestionText;\n    }\n\n    public void setQuestionText(String questionText) {\n        QuestionText = questionText;\n    }\n\n    public String getQuestionImage() {\n        return questionImage;\n    }\n\n    public void setQuestionImage(String questionImage) {\n        this.questionImage = questionImage;\n    }\n\n    public String getAnswerA() {\n        return answerA;\n    }\n\n    public void setAnswerA(String answerA) {\n        this.answerA = answerA;\n    }\n\n    public String getAnswerB() {\n        return answerB;\n    }\n\n    public void setAnswerB(String answerB) {\n        this.answerB = answerB;\n    }\n\n    public String getAnswerC() {\n        return answerC;\n    }\n\n    public void setAnswerC(String answerC) {\n        this.answerC = answerC;\n    }\n\n    public String getAnswerD() {\n        return answerD;\n    }\n\n    public void setAnswerD(String answerD) {\n        this.answerD = answerD;\n    }\n\n    public String getCorrectAnswer() {\n        return correctAnswer;\n    }\n\n    public void setCorrectAnswer(String correctAnswer) {\n        this.correctAnswer = correctAnswer;\n    }\n\n    public boolean isImageQuestion() {\n        return isImageQuestion;\n    }\n\n    public void setImageQuestion(boolean imageQuestion) {\n        isImageQuestion = imageQuestion;\n    }\n\n    public int getCategoryId() {\n        return categoryId;\n    }\n\n    public void setCategoryId(int categoryId) {\n        this.categoryId = categoryId;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/Question.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/Model/Question.java	(date 1571020229000)
@@ -2,24 +2,21 @@
 
 public class Question {
     private int id;
-    private String QuestionText, questionImage, answerA, answerB, answerC, answerD, correctAnswer;
+    private String questionText, questionImage, answerA, answerB, answerC, answerD, correctAnswer;
     private boolean isImageQuestion;
     private int categoryId;
 
     public Question() {
     }
 
-    public Question(int id, String questionText, String questionImage, String answerA, String answerB, String answerC, String answerD, String correctAnswer, boolean isImageQuestion, int categoryId) {
+    public Question(int id, String questionText, String answerA, String answerB, String answerC, String answerD, String correctAnswer) {
         this.id = id;
-        QuestionText = questionText;
-        this.questionImage = questionImage;
+        this.questionText = questionText;
         this.answerA = answerA;
         this.answerB = answerB;
         this.answerC = answerC;
         this.answerD = answerD;
         this.correctAnswer = correctAnswer;
-        this.isImageQuestion = isImageQuestion;
-        this.categoryId = categoryId;
     }
 
     public int getId() {
@@ -31,11 +28,11 @@
     }
 
     public String getQuestionText() {
-        return QuestionText;
+        return questionText;
     }
 
     public void setQuestionText(String questionText) {
-        QuestionText = questionText;
+        this.questionText = questionText;
     }
 
     public String getQuestionImage() {
Index: app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/CategoryAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package koreanlearning.hangul.serokorean.beginnerone.quiz.adapter;\n\nimport android.content.Context;\nimport android.content.Intent;\nimport android.support.annotation.NonNull;\nimport android.support.v7.widget.CardView;\nimport android.support.v7.widget.RecyclerView;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.TextView;\n\nimport com.hangul.serokorean.R;\n\nimport java.util.List;\n\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionActivity;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;\nimport koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;\n\npublic class CategoryAdapter extends RecyclerView.Adapter<CategoryAdapter.MyViewHolder> {\n    Context context;\n    List<Category> categories;\n\n    public CategoryAdapter(QuizCategories quizCategories, List<Category> allCategories) {\n        context = quizCategories;\n        categories = allCategories;\n    }\n\n    @NonNull\n    @Override\n    public MyViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int i) {\n        View itemView = LayoutInflater.from(context).inflate(R.layout.layout_category_item, viewGroup, false);\n        return new MyViewHolder(itemView);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull MyViewHolder myViewHolder, int i) {\n        myViewHolder.quiz_chapter.setText(categories.get(i).getName());\n    }\n\n    @Override\n    public int getItemCount() {\n        if(categories == null){\n            return 0;\n        }\n        return categories.size();\n    }\n\n    public class MyViewHolder extends RecyclerView.ViewHolder {\n        CardView card_category;\n        TextView quiz_chapter;\n        public MyViewHolder(@NonNull View itemView) {\n            super(itemView);\n            card_category = itemView.findViewById(R.id.card_catetory);\n            quiz_chapter = itemView.findViewById(R.id.quiz_category_one);\n            card_category.setOnClickListener(new View.OnClickListener(){\n                @Override\n                public void onClick(View v) {\n                    Common.selectedCategory = categories.get(getAdapterPosition()); //assign current category position\n                    Intent selectedCategory = new Intent(context, QuestionActivity.class);\n                    context.startActivity(selectedCategory);\n                }\n            });\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/CategoryAdapter.java	(revision 20ed7f340443b6c2d45c4e69f27ca95d5661353c)
+++ app/src/main/java/koreanlearning/hangul/serokorean/beginnerone/quiz/adapter/CategoryAdapter.java	(date 1571017333000)
@@ -11,13 +11,12 @@
 import android.widget.TextView;
 
 import com.hangul.serokorean.R;
-
 import java.util.List;
 
 import koreanlearning.hangul.serokorean.beginnerone.quiz.Model.Category;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.QuestionActivity;
 import koreanlearning.hangul.serokorean.beginnerone.quiz.QuizCategories;
-import koreanlearning.hangul.serokorean.beginnerone.quiz.common.Common;
+import koreanlearning.hangul.serokorean.beginnerone.quiz.common.QuizCommon;
 
 public class CategoryAdapter extends RecyclerView.Adapter<CategoryAdapter.MyViewHolder> {
     Context context;
@@ -58,7 +57,7 @@
             card_category.setOnClickListener(new View.OnClickListener(){
                 @Override
                 public void onClick(View v) {
-                    Common.selectedCategory = categories.get(getAdapterPosition()); //assign current category position
+                    QuizCommon.selectedCategory = categories.get(getAdapterPosition()); //assign current category position
                     Intent selectedCategory = new Intent(context, QuestionActivity.class);
                     context.startActivity(selectedCategory);
                 }
